exports:
  Cell:
    kind: fn:constructor
    generics:
      Value: The type of value contained in the cell.
    returns: [Cell, "A cell with the given initial value"]
    params:
      value: [Value, "The initial value of the cell"]
      options:
        - "@options?"
        - description: ["string?", "A description of the cell"]
          equals:
            [
              "(a: Value, b: Value) => boolean?",
              "A function that returns true if the values are equal",
            ]
    docs: The `Cell` API is the fundamental storage building block of Starbeam.
    properties:
      current: ["Value", "The current value of the cell"]
    methods:
      update:
        params:
          updater:
            - "(prev: Value) => Value"
            - "A function that takes the previous value of the cell and returns the new value"
        returns: ["boolean", "`true` if the value changed, `false` otherwise"]
      set:
        params:
          value: ["Value", "The new value of the cell"]
        returns: ["boolean", "`true` if the value changed, `false` otherwise"]
      freeze:
        tag: "optimization"
        docs: The `freeze` method prevents the cell from updating. This allows for Starbeam's internals to avoid checking if the cell has changed when it's used in a formula.
